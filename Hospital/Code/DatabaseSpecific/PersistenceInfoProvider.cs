//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Hospital.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	internal static class PersistenceInfoProviderSingleton
	{
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton() {	}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitDoctorEntityMappings();
			InitPatientEntityMappings();
		}

		/// <summary>Inits DoctorEntity's mappings</summary>
		private void InitDoctorEntityMappings()
		{
			this.AddElementMapping("DoctorEntity", @"hospital", @"public", "doctor", 5, 0);
			this.AddElementFieldMapping("DoctorEntity", "Address", "address", false, "Text", 1073741824, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("DoctorEntity", "Email", "email", false, "Text", 1073741824, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("DoctorEntity", "FirstName", "first_name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("DoctorEntity", "Id", "id", false, "Bigint", 0, 20, 0, true, "public.doctor_id_seq", null, typeof(System.Int64), 3);
			this.AddElementFieldMapping("DoctorEntity", "LastName", "last_name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 4);
		}

		/// <summary>Inits PatientEntity's mappings</summary>
		private void InitPatientEntityMappings()
		{
			this.AddElementMapping("PatientEntity", @"hospital", @"public", "patient", 6, 0);
			this.AddElementFieldMapping("PatientEntity", "Address", "address", false, "Text", 1073741824, 0, 0, false, "", null, typeof(System.String), 0);
			this.AddElementFieldMapping("PatientEntity", "AssignedDoctorId", "assigned_doctor_id", false, "Bigint", 0, 20, 0, false, "", null, typeof(System.Int64), 1);
			this.AddElementFieldMapping("PatientEntity", "Email", "email", false, "Text", 1073741824, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("PatientEntity", "FirstName", "first_name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("PatientEntity", "Id", "id", false, "Bigint", 0, 20, 0, true, "public.patient_id_seq", null, typeof(System.Int64), 4);
			this.AddElementFieldMapping("PatientEntity", "LastName", "last_name", false, "Varchar", 100, 0, 0, false, "", null, typeof(System.String), 5);
		}

	}
}
