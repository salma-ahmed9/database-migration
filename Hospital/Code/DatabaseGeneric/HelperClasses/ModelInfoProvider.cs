//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using Hospital.FactoryClasses;
using Hospital.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Hospital.HelperClasses
{
	/// <summary>Singleton implementation of the ModelInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	public static class ModelInfoProviderSingleton
	{
		private static readonly IModelInfoProvider _providerInstance = new ModelInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static ModelInfoProviderSingleton()	{ }

		/// <summary>Gets the singleton instance of the ModelInfoProviderCore</summary>
		/// <returns>Instance of the FieldInfoProvider.</returns>
		public static IModelInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the ModelInfoProvider.</summary>
	internal class ModelInfoProviderCore : ModelInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="ModelInfoProviderCore"/> class.</summary>
		internal ModelInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores.</summary>
		private void Init()
		{
			this.InitClass();
			InitDoctorEntityInfo();
			InitPatientEntityInfo();
			this.BuildInternalStructures();
		}

		/// <summary>Inits DoctorEntity's info objects</summary>
		private void InitDoctorEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(DoctorFieldIndex), "DoctorEntity");
			this.AddElementFieldInfo("DoctorEntity", "Address", typeof(System.String), false, false, false, false,  (int)DoctorFieldIndex.Address, 1073741824, 0, 0);
			this.AddElementFieldInfo("DoctorEntity", "Email", typeof(System.String), false, false, false, false,  (int)DoctorFieldIndex.Email, 1073741824, 0, 0);
			this.AddElementFieldInfo("DoctorEntity", "FirstName", typeof(System.String), false, false, false, false,  (int)DoctorFieldIndex.FirstName, 100, 0, 0);
			this.AddElementFieldInfo("DoctorEntity", "Id", typeof(System.Int64), true, false, true, false,  (int)DoctorFieldIndex.Id, 0, 0, 20);
			this.AddElementFieldInfo("DoctorEntity", "LastName", typeof(System.String), false, false, false, false,  (int)DoctorFieldIndex.LastName, 100, 0, 0);
		}

		/// <summary>Inits PatientEntity's info objects</summary>
		private void InitPatientEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(PatientFieldIndex), "PatientEntity");
			this.AddElementFieldInfo("PatientEntity", "Address", typeof(System.String), false, false, false, false,  (int)PatientFieldIndex.Address, 1073741824, 0, 0);
			this.AddElementFieldInfo("PatientEntity", "AssignedDoctorId", typeof(System.Int64), false, true, false, false,  (int)PatientFieldIndex.AssignedDoctorId, 0, 0, 20);
			this.AddElementFieldInfo("PatientEntity", "Email", typeof(System.String), false, false, false, false,  (int)PatientFieldIndex.Email, 1073741824, 0, 0);
			this.AddElementFieldInfo("PatientEntity", "FirstName", typeof(System.String), false, false, false, false,  (int)PatientFieldIndex.FirstName, 100, 0, 0);
			this.AddElementFieldInfo("PatientEntity", "Id", typeof(System.Int64), true, false, true, false,  (int)PatientFieldIndex.Id, 0, 0, 20);
			this.AddElementFieldInfo("PatientEntity", "LastName", typeof(System.String), false, false, false, false,  (int)PatientFieldIndex.LastName, 100, 0, 0);
		}
	}
}